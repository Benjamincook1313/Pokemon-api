{"version":3,"sources":["images/pokemon card.jpeg","Components/Card.js","App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","img","types","playingGame","useState","showCard","setShowCard","startGame","setStartGame","useEffect","typeColor","str","handleFlip","a","className","style","background","color1","type","color2","getColors","onClick","src","alt","charAt","toUpperCase","slice","length","CardBack","App","props","state","url","allPokemon","loaded","search","selectedGen","card1","card2","player1","player2","getPokemon","axios","get","res","data","setState","next","getEachPokemon","result","forEach","pokemon","then","console","log","results","this","getGroup","newUrl","Button","variant","sortedPokemon","sort","poke","mon","arr","i","temp","randomNum","Math","floor","random","DropdownButton","title","Dropdown","Item","href","map","sprites","other","dream_world","front_default","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd6e4404.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pokemon card.534ed620.jpeg\";","import React, { useState, useEffect } from 'react'\nimport CardBack from '/Users/benjamin/fun-projects/Practice/pokemon/src/images/pokemon card.jpeg'\n\nconst Card = ({id, name, img, types, playingGame}) => {\n\n  const [showCard, setShowCard] = useState(true)\n  const [startGame, setStartGame] = useState(false)\n\n  useEffect(() => {\n    if(playingGame && !startGame){\n      setShowCard(false)\n    }\n    if(!playingGame){\n      setShowCard(true)\n      setStartGame(false)\n    }\n  }, [playingGame, startGame])\n\n  const typeColor = (str) => {\n    switch(str){\n      case 'normal': \n        return '#A8A77A'\n      case 'fire':  \n        return '#EE8130'\n      case 'water':  \n        return '#6390F0'\n      case 'electric':  \n        return '#F7D02C'\n      case 'grass':  \n        return '#7AC74C'\n      case 'ice':  \n        return '#96D9D6'\n      case 'fighting':  \n        return '#C22E28'\n      case 'poison':  \n        return '#A33EA1'\n      case 'ground':  \n        return '#E2BF65'\n      case 'flying':  \n        return '#A98FF3'\n      case 'psychic':  \n        return '#F95587'\n      case 'bug':  \n        return '#A6B91A'\n      case 'rock':  \n        return '#B6A136'\n      case 'ghost':  \n        return '#735797'\n      case 'dragon':  \n        return '#6F35FC'\n      case 'dark':  \n        return '#705746'\n      case 'steel':  \n        return '#B7B7CE'\n      case 'fairy':  \n        return '#D685AD'\n      default: \n        return ['white']\n    }\n  };\n\n  const getColors = () => {\n    if(!types[1]){\n      return typeColor(`${types[0].type.name}`)\n    }else{\n      let color1 = typeColor(`${types[0].type.name}`)\n      let color2 = typeColor(`${types[1].type.name}`)\n      return `linear-gradient(90deg, ${color1}, ${color2})`\n    }\n  };\n\n\n  const handleFlip = async (id) => {\n    setShowCard(!showCard)\n    if(!startGame){\n      setStartGame(true)\n    }\n  };\n\n  return (\n    <div className='Card' style={{background: `${getColors()}`}} onClick={() => handleFlip(id)}>\n      {showCard? \n        <div className='card-info'>\n          <p>#0{id}</p>\n          <div className='img-container'>\n            <img className='poke-img' src={img} alt={name} />\n          </div>\n          <h2>{name.charAt(0).toUpperCase() + name.slice(1)}</h2>\n          {types.length > 1?\n            <p>\n              Type: {`${types[0].type.name}/${types[1].type.name}`}\n            </p>\n            :<p>Type: {types[0].type.name}</p>\n          }\n        </div>: \n        <div>\n          {/* <h1>Pokemon Memory</h1> */}\n          <img className='card-back' src={CardBack} alt='Pokemon Card'/>\n        </div>\n      }\n    </div>\n  )\n};\n\nexport default Card;","import React, { Component } from 'react'\nimport axios from 'axios'\nimport './App.css'\nimport Card from './Components/Card'\nimport { Button, InputGroup, FormControl, DropdownButton, Dropdown } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Swal from 'sweetalert2'\n\nexport default class App extends Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      url: 'https://pokeapi.co/api/v2/pokemon',\n      allPokemon:[],\n      loaded: false,\n      search: '',\n      selectedGen: 'Select Generation',\n      playingGame: false,\n      card1: '',\n      card2: '',\n      player1: [],\n      player2: []\n    }\n\n    this.getPokemon = async () => {\n      const res = await axios.get(this.state.url)\n      const data = res.data\n      \n      this.setState({\n        url: data.next\n      })\n\n      const getEachPokemon = (result) => {\n        result.forEach(async pokemon => {\n          const res = await axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemon.name}`)\n          const data = res.data\n          await this.setState({\n            allPokemon: [...this.state.allPokemon, data]\n          })\n        })\n        this.setState({loaded: true})\n      }\n      axios.get('https://pokeapi.co/api/v2/pokemon/weedle').then(res =>{\n        console.log(res.data)\n      })\n\n      getEachPokemon(data.results)\n\n    };\n\n  };\n  \n  componentDidMount() {\n    if(!this.loaded){\n      this.getPokemon()\n    }\n    console.log('component mounted')\n  };\n\n  render() {\n    const { allPokemon, loaded, selectedGen, playingGame} = this.state\n\n    // const handleChange = (value) => {\n    //   this.setState({search: value})\n    // };\n\n    // sorts pokemon cards A - Z\n\n    const aToZ = () => {\n      const sortedPokemon = allPokemon.sort((poke, mon) => {\n        if(poke.name < mon.name ) return -1 \n        if(mon.name < poke.name ) return 1 \n        else return 0\n      })\n      this.setState({allPokemon: sortedPokemon})\n    };\n\n    // sort pokemon cards by number\n\n    const sortByNum = () => {\n      const sortedPokemon = allPokemon.sort((poke, mon) => {\n        if(poke.id < mon.id ) return -1 \n        if(mon.id < poke.id ) return 1 \n        else return 0\n      })\n      this.setState({allPokemon: sortedPokemon})\n    };\n\n    // shuffles the order of the pokemon cards\n\n    const shuffle = () => {\n      let arr = [...allPokemon]\n      for(let i=0; i < arr.length; i++){\n        let temp = arr[i]\n        let randomNum = Math.floor(Math.random() * arr.length)\n        arr[i] = arr[randomNum]\n        arr[randomNum] = temp\n      }\n      this.setState({\n        allPokemon: arr\n      })\n    };\n\n    // get pokemon by generations 1 2 3 \n\n    const getGroup = async (newUrl) => {\n      await this.setState({\n        url: newUrl[0], \n        allPokemon: [],\n        selectedGen: newUrl[1],\n        loaded: false\n      })\n\n      this.getPokemon()\n    };\n\n    // Memory matching game \n\n    const playGame = () => {\n      this.setState({\n        playingGame: true,\n        allPokemon: [...allPokemon, ...allPokemon]\n      })\n    };\n\n    // checks cards selected for match if they do match send player the match \n\n    // const checker = () => {\n    //   if(card1 === card2){\n    //     this.setState([...matches, card1[0]])\n        \n    //     for(let i=0; i <=allPokemon.length; i++){\n\n    //     }\n    //   }\n    // };\n\n    const stopGame = async () => {\n      await this.setState({\n        playingGame: false,\n        url: 'https://pokeapi.co/api/v2/pokemon',\n        allPokemon: [],\n        selectedGen: 'Select Generation'\n      });\n\n      this.getPokemon()\n    }\n\n    return (\n      <div className='App'>\n        <h1>Welcome, Pokemon Trainer!</h1>\n        <div className='srch'>\n          {/* <InputGroup className=\"mb-3\">\n            <FormControl placeholder=\"Search\" aria-label=\"Search Pokemon\" aria-describedby=\"basic-addon2\" onChange={handleChange}/>\n            <Button variant=\"outline-secondary\" id=\"button-addon2\">search</Button>\n          </InputGroup> */}\n        </div>\n        <div className='sort-btns'>\n\n          {/* {!playingGame?  */}\n            <Button variant='dark' onClick={sortByNum}>Sort By #</Button>\n          {/* : null} */}\n          {/* {!playingGame?  */}\n            <Button variant='dark' onClick={aToZ}>Sort A-Z</Button>\n          {/* : null} */}\n          <Button variant='dark' onClick={shuffle}>Shuffle</Button>\n\n          {playingGame? null:\n            <DropdownButton id=\"dropdown-basic-button\" title={selectedGen} variant='dark'>\n              <Dropdown.Item href=\"#/action-1\" onClick={() => getGroup(['https://pokeapi.co/api/v2/pokemon?limit=151', 'Gen 1'])}>Gen 1</Dropdown.Item>\n              <Dropdown.Item href=\"#/action-2\" onClick={() => getGroup(['https://pokeapi.co/api/v2/pokemon?limit=100&offset=151', 'Gen 2'])}>Gen 2</Dropdown.Item>\n              <Dropdown.Item href=\"#/action-3\" onClick={() => getGroup(['https://pokeapi.co/api/v2/pokemon?limit=135&offset=251', 'Gen 3'])}>Gen 3</Dropdown.Item>\n            </DropdownButton>\n          }\n\n          {/* {playingGame? \n            <Button variant='dark' onClick={stopGame}>Stop Playing</Button>\n            :\n            <Button variant='dark' onClick={playGame}>Play Memory</Button>\n          } */}\n        </div>\n        <div className='card-wrapper'>\n          {loaded? allPokemon.map((pokemon, i) => (\n            <Card \n              key={i}\n              id={pokemon.id}\n              name={pokemon.name}\n              img={pokemon.sprites.other.dream_world.front_default}\n              types={pokemon.types}\n              playingGame={playingGame}\n            />\n            ))\n            :'...loading'\n          }\n        </div>\n        {playingGame?\n          null:\n          <Button variant='secondary' onClick={this.getPokemon}>Get More Pokemon</Button>\n        }\n      </div>\n    )\n  };\n};\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}